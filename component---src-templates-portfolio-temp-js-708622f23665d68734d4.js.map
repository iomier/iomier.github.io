{"version":3,"sources":["webpack:///./src/templates/portfolioTemp.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/utils/Headline.jsx","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","d","blogPostQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","styled_components__WEBPACK_IMPORTED_MODULE_1__","gatsby__WEBPACK_IMPORTED_MODULE_2__","gatsby_image__WEBPACK_IMPORTED_MODULE_3__","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","_components_utils_Headline__WEBPACK_IMPORTED_MODULE_4__","_ref","portfolio","data","sanityPortfolio","a","createElement","StModal","isPost","title","StClose","to","className","fluid","mainImage","asset","alt","styled","div","withConfig","displayName","componentId","Link","graphql","StaticQueryContext","StaticQuery","useStaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","React","createContext","props","Consumer","staticQueryData","query","render","children","useContext","context","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","Headline","id","StHeadline","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,kCAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAAAW,EAAAX,EAAAO,EAAAG,GAAAE,EAAAZ,EAAA,KAwBeE,EAAA,iBAAAW,GAAc,IACrBC,EADqBD,EAAXE,KACOC,gBACvB,OACEV,EAAAW,EAAAC,cAACC,EAAD,KACEb,EAAAW,EAAAC,cAAA,WACEZ,EAAAW,EAAAC,cAACN,EAAA,EAAD,CAAUQ,QAAQ,EAAMC,MAAOP,EAAUO,QACzCf,EAAAW,EAAAC,cAACI,EAAD,CAASC,GAAG,SAAZ,qBAEAjB,EAAAW,EAAAC,cAAA,OAAKM,UAAU,aACblB,EAAAW,EAAAC,cAACP,EAAAM,EAAD,CAAKQ,MAAOX,EAAUY,UAAUC,MAAMF,MAAOG,IAAKd,EAAUO,YAS/D,IAAMjB,EAAa,aAoBpBe,EAAUU,IAAOC,IAAVC,WAAA,CAAAC,YAAA,yBAAAC,YAAA,YAAGJ,CAAH,8MA2BPP,EAAUO,YAAOK,QAAVH,WAAA,CAAAC,YAAA,yBAAAC,YAAA,YAAGJ,CAAH,qMCzFb7B,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,4BAAAiC,IAAAnC,EAAAG,EAAAD,EAAA,uCAAAkC,IAAApC,EAAAG,EAAAD,EAAA,gCAAAmC,IAAArC,EAAAG,EAAAD,EAAA,mCAAAoC,IAAA,IAAAjC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAkC,EAAAvC,EAAA,GAAAwC,EAAAxC,EAAAO,EAAAgC,GAAAE,EAAAzC,EAAA,IAAA0C,EAAA1C,EAAAO,EAAAkC,GAAAzC,EAAAG,EAAAD,EAAA,yBAAAwC,EAAAzB,IAAAjB,EAAAG,EAAAD,EAAA,oCAAAuC,EAAA,kBAAAzC,EAAAG,EAAAD,EAAA,+BAAAuC,EAAA,aAAAzC,EAAAG,EAAAD,EAAA,8BAAAuC,EAAA,YAAAzC,EAAAG,EAAAD,EAAA,6BAAAuC,EAAA,WAAAzC,EAAAG,EAAAD,EAAA,yBAAAuC,EAAA,OAAAzC,EAAAG,EAAAD,EAAA,4BAAAuC,EAAA,UAAAzC,EAAAG,EAAAD,EAAA,+BAAAuC,EAAA,iBAAAE,EAAA3C,EAAA,KAAA4C,EAAA5C,EAAAO,EAAAoC,GAAA3C,EAAAG,EAAAD,EAAA,iCAAA0C,EAAA3B,IAaA,IAAMmB,EAAqBS,IAAMC,cAAc,IAEzCT,EAAc,SAAAU,GAAK,OACvBzC,EAAAW,EAAAC,cAACkB,EAAmBY,SAApB,KACG,SAAAC,GACC,OACEF,EAAMhC,MACLkC,EAAgBF,EAAMG,QAAUD,EAAgBF,EAAMG,OAAOnC,MAEtDgC,EAAMI,QAAUJ,EAAMK,UAC5BL,EAAMhC,KAAOgC,EAAMhC,KAAKA,KAAOkC,EAAgBF,EAAMG,OAAOnC,MAGvDT,EAAAW,EAAAC,cAAA,uCAMToB,EAAiB,SAAAY,GAEZL,IAAMQ,WAQf,IAAMC,EAAUT,IAAMQ,WAAWjB,GACjC,GAAIkB,EAAQJ,IAAUI,EAAQJ,GAAOnC,KACnC,OAAOuC,EAAQJ,GAAOnC,KAEtB,MAAM,IAAIwC,MACR,yMAcN,SAASpB,IACP,MAAM,IAAIoB,MACR,8UATJlB,EAAYmB,UAAY,CACtBzC,KAAM0C,IAAUC,OAChBR,MAAOO,IAAUE,OAAOC,WACxBT,OAAQM,IAAUI,KAClBT,SAAUK,IAAUI,2BC1DtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCA/C,IAAAzD,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAWemE,IARE,SAAAtD,GAA2B,IAAxBQ,EAAwBR,EAAxBQ,MAAO+C,EAAiBvD,EAAjBuD,GAAIhD,EAAaP,EAAbO,OAC7B,OACEd,EAAAW,EAAAC,cAACmD,EAAD,CAAYjD,OAAQA,GAClBd,EAAAW,EAAAC,cAAA,MAAIkD,GAAIA,GAAK/C,KAMnB,IAAMgD,EAAaxC,IAAOC,IAAVC,WAAA,CAAAC,YAAA,uBAAAC,YAAA,gBAAGJ,CAAH,uMACM,SAAAkB,GAAK,OACvBA,EAAM3B,OAAS,0BAA4B,6HCRzCkD,EAAmB,SAAAzD,GAAkB,IAAf0D,EAAe1D,EAAf0D,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAKH,EAIE3B,IAAM3B,cAAc0D,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,OANV,MAUXT,EAAiBd,UAAY,CAC3Be,SAAUd,IAAUuB,MAAM,CACxBL,SAAUlB,IAAUE,OAAOC,aAC1BA,YAGUU","file":"component---src-templates-portfolio-temp-js-708622f23665d68734d4.js","sourcesContent":["// import React from \"react\"\n// import { graphql } from \"gatsby\"\n\n// export const query = graphql`\n//   query($slug: String) {\n//     sanityPortfolio(slug: { current: { eq: $slug } }) {\n//       title\n//     }\n//   }\n// `\n\n// export default ({ data }) => (\n//   <div>\n//     <h1>{data.sanityPortfolio.title}</h1>\n//   </div>\n// )\n\nimport React from \"react\"\nimport { graphql } from \"gatsby\"\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport Headline from \"../components/utils/Headline\"\n\nexport default ({ data }) => {\n  const portfolio = data.sanityPortfolio\n  return (\n    <StModal>\n      <div>\n        <Headline isPost={true} title={portfolio.title} />\n        <StClose to=\"#port\">Back to Portfolio</StClose>\n\n        <div className=\"postimage\">\n          <Img fluid={portfolio.mainImage.asset.fluid} alt={portfolio.title} />\n        </div>\n      </div>\n\n      {/* <StPost dangerouslySetInnerHTML={{ __html: post.html }} /> */}\n    </StModal>\n  )\n}\n\nexport const blogPostQuery = graphql`\n  query($slug: String) {\n    sanityPortfolio(slug: { current: { eq: $slug } }) {\n      title\n      desc {\n        sanityChildren {\n          text\n        }\n      }\n      mainImage {\n        asset {\n          fluid {\n            ...GatsbySanityImageFluid\n          }\n        }\n      }\n    }\n  }\n`\n\nconst StModal = styled.div`\n  width: 100%;\n  margin: 0;\n  background-color: #fff;\n  .postimage {\n    border-radius: 12px;\n    box-shadow: 0px 2px 5px 0px rgba(0, 0, 0, 0.75);\n\n    width: 40vw;\n    max-width: 100%;\n    margin: 2em auto;\n  }\n  img {\n    width: inherit;\n    border-radius: inherit;\n  }\n`\n// const StPost = styled.div`\n//   background-color: #eee;\n//   margin: 0;\n//   padding: 2em;\n//   .btn {\n//     background-color: #bada55;\n//     color: #eee;\n//     border: 1px solid #333;\n//   }\n// `\nconst StClose = styled(Link)`\n  color: #000;\n  background-color: #eee;\n  padding: 0.5em 1em;\n  display: block;\n  text-align: center;\n  font-weight: 600;\n  transition: 0.5s;\n  &:hover {\n    background-color: #000;\n    color: #eee;\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nconst Headline = ({ title, id, isPost }) => {\n  return (\n    <StHeadline isPost={isPost}>\n      <h2 id={id}>{title}</h2>\n    </StHeadline>\n  )\n}\n\nexport default Headline\nconst StHeadline = styled.div`\n  background-color: ${props =>\n    props.isPost ? \"rgba(186, 217, 84, 0.8)\" : \"hsla(0, 0%, 80%, 0.62)\"};\n  border-width: 1px 0 1px 0px;\n  border-color: black;\n  border-style: solid;\n  transition: 0.3s;\n  text-align: center;\n  h2 {\n    margin: 0;\n    padding: 0.5em;\n  }\n  &:hover {\n    background-color: rgba(186, 217, 84, 0.8);\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}