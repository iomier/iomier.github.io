{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Main/portfolio.jsx","webpack:///./src/components/seo.js","webpack:///./src/components/utils/NavBar.jsx","webpack:///./src/components/header.js"],"names":["__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","useStaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","React","createContext","props","createElement","Consumer","staticQueryData","data","query","render","children","useContext","context","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","portfolio","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","StPortGrid","allSanityPortfolio","edges","map","edge","StLink","key","node","title","to","slug","current","asModal","gatsby_image__WEBPACK_IMPORTED_MODULE_5___default","fluid","mainImage","asset","_public_static_d_2222272102_json__WEBPACK_IMPORTED_MODULE_0__","styled","div","withConfig","displayName","componentId","Link","SEO","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","array","arrayOf","StNavBar","nav","NavBar","siteTitle","react_default","gatsby_browser_entry","id","href","Header","StHeader","utils_NavBar","header"],"mappings":"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","file":"2-816bbf18d89f12849275.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport { Link } from \"gatsby-plugin-modal-routing\"\nimport Img from \"gatsby-image\"\nconst portfolio = ({ data }) => {\n  return (\n    <StaticQuery\n      query={graphql`\n        query {\n          allSanityPortfolio(sort: { fields: [_updatedAt], order: DESC }) {\n            edges {\n              node {\n                slug {\n                  current\n                }\n                title\n                mainImage {\n                  asset {\n                    fluid(maxWidth: 800) {\n                      ...GatsbySanityImageFluid\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => (\n        <StPortGrid>\n          {data.allSanityPortfolio.edges.map(edge => (\n            <StLink key={edge.node.title} to={edge.node.slug.current} asModal>\n              <div>\n                <Img fluid={edge.node.mainImage.asset.fluid} />\n              </div>\n              <h3>{edge.node.title}</h3>\n            </StLink>\n          ))}\n        </StPortGrid>\n      )}\n    />\n  )\n}\n\nexport default portfolio\n\nconst StPortGrid = styled.div`\n  background-color: #eee;\n  display: grid;\n  grid-gap: 30px;\n  grid-template-columns: repeat(auto-fill, minmax(255px, 1fr));\n  padding: 4em;\n  img {\n    width: inherit;\n  }\n  a {\n    text-align: center;\n  }\n`\nconst StLink = styled(Link)`\n  box-shadow: 2px 2px 5px 0px rgba(0, 0, 0, 0.75);\n  border: 1px solid #eee;\n  padding: 0.5em;\n  color: #333;\n  background-color: #fff;\n  font-weight: 600;\n  transition: 0.6s;\n  &:hover {\n    filter: grayscale(100);\n  }\n  div {\n    width: 100%;\n  }\n  img {\n    display: block;\n  }\n  h3 {\n    background-color: #bada55;\n    font-size: 1rem;\n    text-decoration: none;\n    padding: 0.5em;\n    margin: 0;\n    margin-top: 10px;\n  }\n`\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\n\nconst NavBar = ({ siteTitle }) => {\n  return (\n    <StNavBar>\n      <Link to=\"#logo\" id=\"logo\">\n        {siteTitle}\n      </Link>\n      <Link to=\"#\">Home</Link>\n      <Link to=\"#wid\">What I Do</Link>\n      <Link to=\"#wik\">What I Know</Link>\n      <Link to=\"#port\">Portfolio</Link>\n      <a href=\"http://iomier.github.io/appList/\">Github Demo</a>\n    </StNavBar>\n  )\n}\nconst StNavBar = styled.nav`\n  padding: 2em 1.5em;\n\n  a {\n    color: white;\n    display: block;\n    float: left;\n    margin: 0 0.5em;\n    text-decoration: none;\n    position: relative;\n    top: 50%;\n    transform: perspective(1px) translateY(-50%);\n  }\n  .pullRight {\n    float: right;\n  }\n  #logo {\n    font-size: 1.2em;\n    font-weight: 600;\n    color: #bada55;\n  }\n  a:hover {\n    color: #bada55;\n  }\n`\nexport default NavBar\n","import PropTypes from \"prop-types\"\nimport NavBar from \"./utils/NavBar\"\nimport React from \"react\"\nimport styled from \"styled-components\"\nconst Header = ({ siteTitle }) => (\n  <StHeader>\n    <NavBar siteTitle={siteTitle} />\n  </StHeader>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\nconst StHeader = styled.header`\n  width: 100%;\n  color: #eee;\n  background-color: hsla(144, 83%, 0%, 0.5);\n  @media (max-width: 950px) {\n    //CSS\n    margin: 0;\n    border-radius: 0;\n  }\n`\n"],"sourceRoot":""}